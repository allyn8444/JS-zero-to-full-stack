STRING MANIPULATION

Strings: usually composed of letters of words.
You can declare a string by either choose one of these three ways:
     1. ' '  -wrap your content inside a SINGLE quote
     2. " "  -wrap you content inside a DOUBLE quote
     3. ` `  -wrap your content inside a backtick

console.log("hello 1");
console.log("hello 2");
console.log(`hello 3`);


* ========= C O N C A T E N A T I O N ============== *

Concatenate = to link together in a series or chain

There are many ways to concatenate your string, below are some examples:
     1. Traditional
     2. .concat()
     3. += (appending)
     4. Template Literals (String Template literals)

*******

1.
Traditionally, this is how you can concatenate a string:

let firstName = "Allyn Ralf";
let lastName = "Ledesma";
console.log(firstName + " " + lastName); // Allyn Ralf Ledesma


*******

2.
THE .concat() METHOD

let userName = "nylla";
let userNumb = "1484";

let IGN = userName.concat(userNumb);
console.log(IGN); // nylla1484

-The idea is still the same as the traditional concatenation

*******

3.
USING append OR THE +=

let title = "Spiderman: ";
title += "Homecoming";

console.log(title); // Spiderman: Homecoming


note:
title += "Homecoming";  IS THE SHORTCUT FORM OF: title = title +  "Homecoming";

*******

4.
String Template Literals
-this is using the backticks and ${}
-you can do multiline content by just using a pair of backticks

let favMovie = "Iron Man";
let sentence = `My favorite movie is ${favMovie}!`;

console.log(sentence); // My favorite movie is Iron Man!


let multiLine = ` this is the first line
this is the second line
this is the third line`;

console.log(multiLine);
output:

 this is the first line
this is the second line
this is the third line




* ========= S T R I N G - M E T H O D S ============== *

note: these are just some string methods. For more, visit: https://www.w3schools.com/js/js_string_methods.asp


let word = "BatMan";

console.log(word.length); // 6

console.log(word.toLowerCase()); // batman

console.log(word.toUpperCase()); // BATMAN

// starts at index 1 (inclusive) and ends at index 4 (exclusive)
console.log(word.slice(1, 4)); // atM

console.log(word.includes("B")); // true